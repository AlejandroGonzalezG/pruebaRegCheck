{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { createReactivePlugin } from '../../utils/private.create/create.js';\nimport { injectProp } from '../../utils/private.inject-obj-prop/inject-obj-prop.js';\nimport materialIcons from '../../../icon-set/material-icons.js';\nconst Plugin = createReactivePlugin({\n  iconMapFn: null,\n  __qIconSet: {}\n}, {\n  // props: object\n\n  set(setObject, ssrContext) {\n    const def = {\n      ...setObject\n    };\n    if (__QUASAR_SSR_SERVER__) {\n      if (ssrContext === void 0) {\n        console.error('SSR ERROR: second param required: IconSet.set(iconSet, ssrContext)');\n        return;\n      }\n      def.set = ssrContext.$q.iconSet.set;\n      Object.assign(ssrContext.$q.iconSet, def);\n    } else {\n      def.set = Plugin.set;\n      Object.assign(Plugin.__qIconSet, def);\n    }\n  },\n  install({\n    $q,\n    iconSet,\n    ssrContext\n  }) {\n    if (__QUASAR_SSR_SERVER__) {\n      const initialSet = iconSet || materialIcons;\n      $q.iconMapFn = ssrContext.$q.config.iconMapFn || this.iconMapFn || null;\n      $q.iconSet = {};\n      $q.iconSet.set = setObject => {\n        this.set(setObject, ssrContext);\n      };\n      $q.iconSet.set(initialSet);\n\n      // one-time SSR server operation\n      if (this.props === void 0 || this.props.name !== initialSet.name) {\n        this.props = {\n          ...initialSet\n        };\n      }\n    } else {\n      if ($q.config.iconMapFn !== void 0) {\n        this.iconMapFn = $q.config.iconMapFn;\n      }\n      $q.iconSet = this.__qIconSet;\n      injectProp($q, 'iconMapFn', () => this.iconMapFn, val => {\n        this.iconMapFn = val;\n      });\n      if (this.__installed === true) {\n        iconSet !== void 0 && this.set(iconSet);\n      } else {\n        this.props = new Proxy(this.__qIconSet, {\n          get() {\n            return Reflect.get(...arguments);\n          },\n          ownKeys(target) {\n            return Reflect.ownKeys(target).filter(key => key !== 'set');\n          }\n        });\n        this.set(iconSet || materialIcons);\n      }\n    }\n  }\n});\nexport default Plugin;","map":{"version":3,"names":["createReactivePlugin","injectProp","materialIcons","Plugin","iconMapFn","__qIconSet","set","setObject","ssrContext","def","__QUASAR_SSR_SERVER__","console","error","$q","iconSet","Object","assign","install","initialSet","config","props","name","val","__installed","Proxy","get","Reflect","arguments","ownKeys","target","filter","key"],"sources":["/app/node_modules/quasar/src/plugins/icon-set/IconSet.js"],"sourcesContent":["import { createReactivePlugin } from '../../utils/private.create/create.js'\nimport { injectProp } from '../../utils/private.inject-obj-prop/inject-obj-prop.js'\n\nimport materialIcons from '../../../icon-set/material-icons.js'\n\nconst Plugin = createReactivePlugin({\n  iconMapFn: null,\n  __qIconSet: {}\n}, {\n  // props: object\n\n  set (setObject, ssrContext) {\n    const def = { ...setObject }\n\n    if (__QUASAR_SSR_SERVER__) {\n      if (ssrContext === void 0) {\n        console.error('SSR ERROR: second param required: IconSet.set(iconSet, ssrContext)')\n        return\n      }\n\n      def.set = ssrContext.$q.iconSet.set\n      Object.assign(ssrContext.$q.iconSet, def)\n    }\n    else {\n      def.set = Plugin.set\n      Object.assign(Plugin.__qIconSet, def)\n    }\n  },\n\n  install ({ $q, iconSet, ssrContext }) {\n    if (__QUASAR_SSR_SERVER__) {\n      const initialSet = iconSet || materialIcons\n\n      $q.iconMapFn = ssrContext.$q.config.iconMapFn || this.iconMapFn || null\n      $q.iconSet = {}\n      $q.iconSet.set = setObject => {\n        this.set(setObject, ssrContext)\n      }\n\n      $q.iconSet.set(initialSet)\n\n      // one-time SSR server operation\n      if (\n        this.props === void 0\n        || this.props.name !== initialSet.name\n      ) {\n        this.props = { ...initialSet }\n      }\n    }\n    else {\n      if ($q.config.iconMapFn !== void 0) {\n        this.iconMapFn = $q.config.iconMapFn\n      }\n\n      $q.iconSet = this.__qIconSet\n      injectProp($q, 'iconMapFn', () => this.iconMapFn, val => { this.iconMapFn = val })\n\n      if (this.__installed === true) {\n        iconSet !== void 0 && this.set(iconSet)\n      }\n      else {\n        this.props = new Proxy(this.__qIconSet, {\n          get () { return Reflect.get(...arguments) },\n\n          ownKeys (target) {\n            return Reflect.ownKeys(target)\n              .filter(key => key !== 'set')\n          }\n        })\n\n        this.set(iconSet || materialIcons)\n      }\n    }\n  }\n})\n\nexport default Plugin\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}