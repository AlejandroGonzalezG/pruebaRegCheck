{"ast":null,"code":"import useQuasar from 'quasar/src/composables/use-quasar/use-quasar.js';\nimport { ref } from 'vue';\nimport { useUserStore } from '@/store/userStore';\nimport { storeToRefs } from 'pinia';\nexport default {\n  __name: 'RegisterView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userStore = useUserStore();\n    const {} = storeToRefs();\n    const $q = useQuasar();\n    const email = ref(null);\n    const password = ref(null);\n    async function onSubmit() {\n      try {\n        if (!email.value && !password.value) {\n          const response = await userStore.registerUser(email.value, password.value);\n          console.log(response);\n        }\n        $q.notify({\n          color: 'green-4',\n          textColor: 'white',\n          icon: 'cloud_done',\n          message: 'Submitted'\n        });\n      } catch (e) {\n        console.log(e);\n        $q.notify({\n          color: 'red-4',\n          textColor: 'white',\n          icon: 'cloud_done',\n          message: 'Ha ocurrido un error'\n        });\n      }\n    }\n    function onReset() {\n      email.value = null;\n      password.value = null;\n    }\n    const __returned__ = {\n      userStore,\n      $q,\n      email,\n      password,\n      onSubmit,\n      onReset,\n      get useQuasar() {\n        return useQuasar;\n      },\n      ref,\n      get useUserStore() {\n        return useUserStore;\n      },\n      get storeToRefs() {\n        return storeToRefs;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useQuasar","ref","useUserStore","storeToRefs","userStore","$q","email","password","onSubmit","value","response","registerUser","console","log","notify","color","textColor","icon","message","e","onReset"],"sources":["/home/alejandro/Escritorio/regcheckTest/frontend/src/views/RegisterView.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\" style=\"max-width: 400px\">\n    <q-card class=\"my-card\">\n      <q-card-section>\n        <q-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"q-gutter-md\">\n          <q-input\n            filled\n            v-model=\"email\"\n            label=\"Ingresa tu email\"\n            lazy-rules\n            :rules=\"[val => val && val.length > 0 || 'Ingresa un correo válido']\"\n          />\n      \n          <q-input\n            filled\n            type=\"password\"\n            v-model=\"password\"\n            label=\"ingresa tu contraseña\"\n            lazy-rules\n            :rules=\"[\n              val => val !== null && val !== '' || 'Ingresa una contraseña',\n            ]\"\n          />      \n          <div>\n            <q-btn label=\"Submit\" type=\"submit\" color=\"primary\"/>\n            <q-btn label=\"Reset\" type=\"reset\" color=\"primary\" flat class=\"q-ml-sm\" />\n          </div>\n        </q-form>\n      </q-card-section>\n    </q-card>\n  </div>\n</template>\n\n<script setup>\nimport { useQuasar } from 'quasar'\nimport { ref } from 'vue'\nimport { useUserStore } from '@/store/userStore'\nimport { storeToRefs } from 'pinia';\n\nconst userStore = useUserStore();\nconst {  } = storeToRefs()\n\nconst $q = useQuasar();\n\nconst email = ref(null)\nconst password = ref(null)\n\nasync function onSubmit() {\n  try {\n  if (!email.value && !password.value) {\n    const response = await userStore.registerUser(email.value, password.value)\n    console.log(response);\n  }\n  $q.notify({\n    color: 'green-4',\n    textColor: 'white',\n    icon: 'cloud_done',\n    message: 'Submitted'\n  })\n  } catch (e) {\n    console.log(e);\n    $q.notify({\n      color: 'red-4',\n      textColor: 'white',\n      icon: 'cloud_done',\n      message: 'Ha ocurrido un error'\n    })\n  }\n  \n}\n\nfunction onReset() {\n  email.value = null\n  password.value = null\n}\n</script>\n"],"mappings":"AAkCA,OAAOA,SAAS,MAAM,iDAAW;AACjC,SAASC,GAAG,QAAQ,KAAI;AACxB,SAASC,YAAY,QAAQ,mBAAkB;AAC/C,SAASC,WAAW,QAAQ,OAAO;;;;;;;IAEnC,MAAMC,SAAS,GAAGF,YAAY,CAAC,CAAC;IAChC,MAAM,CAAG,CAAC,GAAGC,WAAW,CAAC;IAEzB,MAAME,EAAE,GAAGL,SAAS,CAAC,CAAC;IAEtB,MAAMM,KAAK,GAAGL,GAAG,CAAC,IAAI;IACtB,MAAMM,QAAQ,GAAGN,GAAG,CAAC,IAAI;IAEzB,eAAeO,QAAQA,CAAA,EAAG;MACxB,IAAI;QACJ,IAAI,CAACF,KAAK,CAACG,KAAK,IAAI,CAACF,QAAQ,CAACE,KAAK,EAAE;UACnC,MAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACO,YAAY,CAACL,KAAK,CAACG,KAAK,EAAEF,QAAQ,CAACE,KAAK;UACzEG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QACvB;QACAL,EAAE,CAACS,MAAM,CAAC;UACRC,KAAK,EAAE,SAAS;UAChBC,SAAS,EAAE,OAAO;UAClBC,IAAI,EAAE,YAAY;UAClBC,OAAO,EAAE;QACX,CAAC;MACD,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVP,OAAO,CAACC,GAAG,CAACM,CAAC,CAAC;QACdd,EAAE,CAACS,MAAM,CAAC;UACRC,KAAK,EAAE,OAAO;UACdC,SAAS,EAAE,OAAO;UAClBC,IAAI,EAAE,YAAY;UAClBC,OAAO,EAAE;QACX,CAAC;MACH;IAEF;IAEA,SAASE,OAAOA,CAAA,EAAG;MACjBd,KAAK,CAACG,KAAK,GAAG,IAAG;MACjBF,QAAQ,CAACE,KAAK,GAAG,IAAG;IACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}