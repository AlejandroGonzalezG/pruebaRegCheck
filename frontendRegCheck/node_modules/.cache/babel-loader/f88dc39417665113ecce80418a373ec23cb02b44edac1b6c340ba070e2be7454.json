{"ast":null,"code":"export default {\n  __name: 'DashboardPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // Define columns and rows\n    const columns = [{\n      name: 'name',\n      required: true,\n      label: 'Dessert (100g serving)',\n      align: 'left',\n      field: row => row.name,\n      format: val => `${val}`,\n      sortable: true\n    }, {\n      name: 'calories',\n      align: 'center',\n      label: 'Calories',\n      field: 'calories',\n      sortable: true\n    }, {\n      name: 'fat',\n      label: 'Fat (g)',\n      field: 'fat',\n      sortable: true\n    }, {\n      name: 'carbs',\n      label: 'Carbs (g)',\n      field: 'carbs'\n    }, {\n      name: 'protein',\n      label: 'Protein (g)',\n      field: 'protein'\n    }, {\n      name: 'sodium',\n      label: 'Sodium (mg)',\n      field: 'sodium'\n    }, {\n      name: 'calcium',\n      label: 'Calcium (%)',\n      field: 'calcium',\n      sortable: true,\n      sort: (a, b) => parseInt(a, 10) - parseInt(b, 10)\n    }, {\n      name: 'iron',\n      label: 'Iron (%)',\n      field: 'iron',\n      sortable: true,\n      sort: (a, b) => parseInt(a, 10) - parseInt(b, 10)\n    }];\n    const rows = [{\n      name: 'Frozen Yogurt',\n      calories: 159,\n      fat: 6.0,\n      carbs: 24,\n      protein: 4.0,\n      sodium: 87,\n      calcium: '14%',\n      iron: '1%'\n    }, {\n      name: 'Ice cream sandwich',\n      calories: 237,\n      fat: 9.0,\n      carbs: 37,\n      protein: 4.3,\n      sodium: 129,\n      calcium: '8%',\n      iron: '1%'\n    }, {\n      name: 'Eclair',\n      calories: 262,\n      fat: 16.0,\n      carbs: 23,\n      protein: 6.0,\n      sodium: 337,\n      calcium: '6%',\n      iron: '7%'\n    }, {\n      name: 'Cupcake',\n      calories: 305,\n      fat: 3.7,\n      carbs: 67,\n      protein: 4.3,\n      sodium: 413,\n      calcium: '3%',\n      iron: '8%'\n    }, {\n      name: 'Gingerbread',\n      calories: 356,\n      fat: 16.0,\n      carbs: 49,\n      protein: 3.9,\n      sodium: 327,\n      calcium: '7%',\n      iron: '16%'\n    }, {\n      name: 'Jelly bean',\n      calories: 375,\n      fat: 0.0,\n      carbs: 94,\n      protein: 0.0,\n      sodium: 50,\n      calcium: '0%',\n      iron: '0%'\n    }, {\n      name: 'Lollipop',\n      calories: 392,\n      fat: 0.2,\n      carbs: 98,\n      protein: 0,\n      sodium: 38,\n      calcium: '0%',\n      iron: '2%'\n    }, {\n      name: 'Honeycomb',\n      calories: 408,\n      fat: 3.2,\n      carbs: 87,\n      protein: 6.5,\n      sodium: 562,\n      calcium: '0%',\n      iron: '45%'\n    }, {\n      name: 'Donut',\n      calories: 452,\n      fat: 25.0,\n      carbs: 51,\n      protein: 4.9,\n      sodium: 326,\n      calcium: '2%',\n      iron: '22%'\n    }, {\n      name: 'KitKat',\n      calories: 518,\n      fat: 26.0,\n      carbs: 65,\n      protein: 7,\n      sodium: 54,\n      calcium: '12%',\n      iron: '6%'\n    }];\n    const __returned__ = {\n      columns,\n      rows\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["columns","name","required","label","align","field","row","format","val","sortable","sort","a","b","parseInt","rows","calories","fat","carbs","protein","sodium","calcium","iron"],"sources":["/app/src/components/DashboardPage.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <q-table\n      title=\"Clientes\"\n      :rows=\"rows\"\n      :columns=\"columns\"\n      row-key=\"name\"\n    />\n  </div>\n</template>\n\n<script setup>\n// Define columns and rows\nconst columns = [\n  {\n    name: 'name',\n    required: true,\n    label: 'Dessert (100g serving)',\n    align: 'left',\n    field: row => row.name,\n    format: val => `${val}`,\n    sortable: true\n  },\n  { name: 'calories', align: 'center', label: 'Calories', field: 'calories', sortable: true },\n  { name: 'fat', label: 'Fat (g)', field: 'fat', sortable: true },\n  { name: 'carbs', label: 'Carbs (g)', field: 'carbs' },\n  { name: 'protein', label: 'Protein (g)', field: 'protein' },\n  { name: 'sodium', label: 'Sodium (mg)', field: 'sodium' },\n  { name: 'calcium', label: 'Calcium (%)', field: 'calcium', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) },\n  { name: 'iron', label: 'Iron (%)', field: 'iron', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) }\n]\n\nconst rows = [\n  {\n    name: 'Frozen Yogurt',\n    calories: 159,\n    fat: 6.0,\n    carbs: 24,\n    protein: 4.0,\n    sodium: 87,\n    calcium: '14%',\n    iron: '1%'\n  },\n  {\n    name: 'Ice cream sandwich',\n    calories: 237,\n    fat: 9.0,\n    carbs: 37,\n    protein: 4.3,\n    sodium: 129,\n    calcium: '8%',\n    iron: '1%'\n  },\n  {\n    name: 'Eclair',\n    calories: 262,\n    fat: 16.0,\n    carbs: 23,\n    protein: 6.0,\n    sodium: 337,\n    calcium: '6%',\n    iron: '7%'\n  },\n  {\n    name: 'Cupcake',\n    calories: 305,\n    fat: 3.7,\n    carbs: 67,\n    protein: 4.3,\n    sodium: 413,\n    calcium: '3%',\n    iron: '8%'\n  },\n  {\n    name: 'Gingerbread',\n    calories: 356,\n    fat: 16.0,\n    carbs: 49,\n    protein: 3.9,\n    sodium: 327,\n    calcium: '7%',\n    iron: '16%'\n  },\n  {\n    name: 'Jelly bean',\n    calories: 375,\n    fat: 0.0,\n    carbs: 94,\n    protein: 0.0,\n    sodium: 50,\n    calcium: '0%',\n    iron: '0%'\n  },\n  {\n    name: 'Lollipop',\n    calories: 392,\n    fat: 0.2,\n    carbs: 98,\n    protein: 0,\n    sodium: 38,\n    calcium: '0%',\n    iron: '2%'\n  },\n  {\n    name: 'Honeycomb',\n    calories: 408,\n    fat: 3.2,\n    carbs: 87,\n    protein: 6.5,\n    sodium: 562,\n    calcium: '0%',\n    iron: '45%'\n  },\n  {\n    name: 'Donut',\n    calories: 452,\n    fat: 25.0,\n    carbs: 51,\n    protein: 4.9,\n    sodium: 326,\n    calcium: '2%',\n    iron: '22%'\n  },\n  {\n    name: 'KitKat',\n    calories: 518,\n    fat: 26.0,\n    carbs: 65,\n    protein: 7,\n    sodium: 54,\n    calcium: '12%',\n    iron: '6%'\n  }\n]\n</script>\n"],"mappings":";;;;;;;IAYA;IACA,MAAMA,OAAO,GAAG,CACd;MACEC,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,wBAAwB;MAC/BC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAEC,GAAG,IAAIA,GAAG,CAACL,IAAI;MACtBM,MAAM,EAAEC,GAAG,IAAI,GAAGA,GAAG,EAAE;MACvBC,QAAQ,EAAE;IACZ,CAAC,EACD;MAAER,IAAI,EAAE,UAAU;MAAEG,KAAK,EAAE,QAAQ;MAAED,KAAK,EAAE,UAAU;MAAEE,KAAK,EAAE,UAAU;MAAEI,QAAQ,EAAE;IAAK,CAAC,EAC3F;MAAER,IAAI,EAAE,KAAK;MAAEE,KAAK,EAAE,SAAS;MAAEE,KAAK,EAAE,KAAK;MAAEI,QAAQ,EAAE;IAAK,CAAC,EAC/D;MAAER,IAAI,EAAE,OAAO;MAAEE,KAAK,EAAE,WAAW;MAAEE,KAAK,EAAE;IAAQ,CAAC,EACrD;MAAEJ,IAAI,EAAE,SAAS;MAAEE,KAAK,EAAE,aAAa;MAAEE,KAAK,EAAE;IAAU,CAAC,EAC3D;MAAEJ,IAAI,EAAE,QAAQ;MAAEE,KAAK,EAAE,aAAa;MAAEE,KAAK,EAAE;IAAS,CAAC,EACzD;MAAEJ,IAAI,EAAE,SAAS;MAAEE,KAAK,EAAE,aAAa;MAAEE,KAAK,EAAE,SAAS;MAAEI,QAAQ,EAAE,IAAI;MAAEC,IAAI,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKC,QAAQ,CAACF,CAAC,EAAE,EAAE,CAAC,GAAGE,QAAQ,CAACD,CAAC,EAAE,EAAE;IAAE,CAAC,EAC9H;MAAEX,IAAI,EAAE,MAAM;MAAEE,KAAK,EAAE,UAAU;MAAEE,KAAK,EAAE,MAAM;MAAEI,QAAQ,EAAE,IAAI;MAAEC,IAAI,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKC,QAAQ,CAACF,CAAC,EAAE,EAAE,CAAC,GAAGE,QAAQ,CAACD,CAAC,EAAE,EAAE;IAAE,EACtH;IAEA,MAAME,IAAI,GAAG,CACX;MACEb,IAAI,EAAE,eAAe;MACrBc,QAAQ,EAAE,GAAG;MACbC,GAAG,EAAE,GAAG;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE;IACR,CAAC,EACD;MACEpB,IAAI,EAAE,oBAAoB;MAC1Bc,QAAQ,EAAE,GAAG;MACbC,GAAG,EAAE,GAAG;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR,CAAC,EACD;MACEpB,IAAI,EAAE,QAAQ;MACdc,QAAQ,EAAE,GAAG;MACbC,GAAG,EAAE,IAAI;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR,CAAC,EACD;MACEpB,IAAI,EAAE,SAAS;MACfc,QAAQ,EAAE,GAAG;MACbC,GAAG,EAAE,GAAG;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR,CAAC,EACD;MACEpB,IAAI,EAAE,aAAa;MACnBc,QAAQ,EAAE,GAAG;MACbC,GAAG,EAAE,IAAI;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR,CAAC,EACD;MACEpB,IAAI,EAAE,YAAY;MAClBc,QAAQ,EAAE,GAAG;MACbC,GAAG,EAAE,GAAG;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR,CAAC,EACD;MACEpB,IAAI,EAAE,UAAU;MAChBc,QAAQ,EAAE,GAAG;MACbC,GAAG,EAAE,GAAG;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CAAC;MACVC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR,CAAC,EACD;MACEpB,IAAI,EAAE,WAAW;MACjBc,QAAQ,EAAE,GAAG;MACbC,GAAG,EAAE,GAAG;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR,CAAC,EACD;MACEpB,IAAI,EAAE,OAAO;MACbc,QAAQ,EAAE,GAAG;MACbC,GAAG,EAAE,IAAI;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR,CAAC,EACD;MACEpB,IAAI,EAAE,QAAQ;MACdc,QAAQ,EAAE,GAAG;MACbC,GAAG,EAAE,IAAI;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CAAC;MACVC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE;IACR,EACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}