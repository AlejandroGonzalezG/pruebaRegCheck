{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"q-pa-md\",\n  style: {\n    \"max-width\": \"400px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_card_section = _resolveComponent(\"q-card-section\");\n  const _component_q_input = _resolveComponent(\"q-input\");\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  const _component_q_form = _resolveComponent(\"q-form\");\n  const _component_q_card = _resolveComponent(\"q-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_q_card, {\n    class: \"my-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_q_card_section, null, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createElementVNode(\"div\", {\n        class: \"text-h6\"\n      }, \"Register\", -1 /* HOISTED */)])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_q_card_section, null, {\n      default: _withCtx(() => [_createVNode(_component_q_form, {\n        onSubmit: _withModifiers($setup.onSubmit, [\"prevent\"]),\n        onReset: $setup.onReset,\n        class: \"q-gutter-md\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_q_input, {\n          filled: \"\",\n          modelValue: $setup.email,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.email = $event),\n          label: \"Ingresa tu email\",\n          \"lazy-rules\": \"\",\n          rules: [val => val && val.length > 0 || 'Ingresa un correo válido']\n        }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_q_input, {\n          filled: \"\",\n          type: \"password\",\n          modelValue: $setup.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n          label: \"ingresa tu contraseña\",\n          \"lazy-rules\": \"\",\n          rules: [val => val !== null && val !== '' || 'Ingresa una contraseña']\n        }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createElementVNode(\"div\", null, [_createVNode(_component_q_btn, {\n          label: \"Registrar\",\n          type: \"submit\",\n          color: \"primary\"\n        }), _createVNode(_component_q_btn, {\n          label: \"Limpiar campos\",\n          type: \"reset\",\n          color: \"primary\",\n          flat: \"\",\n          class: \"q-ml-sm\"\n        })])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_q_card_section, null, {\n      default: _withCtx(() => [_cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"Ya estas registrado? ingresa al\", -1 /* HOISTED */)), _createVNode(_component_q_btn, {\n        onClick: _cache[2] || (_cache[2] = () => $setup.userStore.registerView = false),\n        label: \"Login\",\n        color: \"purple\"\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createVNode","_component_q_card","default","_withCtx","_component_q_card_section","_cache","_createElementVNode","_","_component_q_form","onSubmit","_withModifiers","$setup","onReset","_component_q_input","filled","modelValue","email","$event","label","rules","val","length","type","password","_component_q_btn","color","flat","onClick","userStore","registerView"],"sources":["/app/src/views/RegisterView.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\" style=\"max-width: 400px\">\n    <q-card class=\"my-card\">\n      <q-card-section>\n        <div class=\"text-h6\">Register</div>\n      </q-card-section>\n      <q-card-section>\n        <q-form @submit.prevent=\"onSubmit\" @reset=\"onReset\" class=\"q-gutter-md\">\n          <q-input\n            filled\n            v-model=\"email\"\n            label=\"Ingresa tu email\"\n            lazy-rules\n            :rules=\"[val => val && val.length > 0 || 'Ingresa un correo válido']\"\n          />\n      \n          <q-input\n            filled\n            type=\"password\"\n            v-model=\"password\"\n            label=\"ingresa tu contraseña\"\n            lazy-rules\n            :rules=\"[\n              val => val !== null && val !== '' || 'Ingresa una contraseña',\n            ]\"\n          />      \n          <div>\n            <q-btn label=\"Registrar\" type=\"submit\" color=\"primary\"/>\n            <q-btn label=\"Limpiar campos\" type=\"reset\" color=\"primary\" flat class=\"q-ml-sm\" />\n          </div>\n        </q-form>\n      </q-card-section>\n      <q-card-section>\n        <span>Ya estas registrado? ingresa al</span>\n        <q-btn @click=\"() => userStore.registerView = false\" label=\"Login\" color=\"purple\"></q-btn>\n      </q-card-section>\n    </q-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useUserStore } from '@/store/userStore'\nimport { toast } from 'vue3-toastify';\n\nconst userStore = useUserStore();\n\nconst email = ref(null)\nconst password = ref(null)\n\nasync function onSubmit() {\n  try {\n    const res = await userStore.registerUser(email.value, password.value);\n    userStore.registerView = false;\n    toast(res.data?.message, {\n      autoClose: 3000,\n    })\n  } catch (e) {\n    console.log('Ha ocurrido un error', e.response.data.message);\n    toast(e.response?.data?.message, {\n      autoClose: 3000,\n    })\n  }\n}\n\nfunction onReset() {\n  email.value = null\n  password.value = null\n}\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC,SAAS;EAACC,KAAwB,EAAxB;IAAA;EAAA;;;;;;;;uBAArBC,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,YAAA,CAkCSC,iBAAA;IAlCDL,KAAK,EAAC;EAAS;IAF3BM,OAAA,EAAAC,QAAA,CAGM,MAEiB,CAFjBH,YAAA,CAEiBI,yBAAA;MALvBF,OAAA,EAAAC,QAAA,CAIQ,MAAmCE,MAAA,QAAAA,MAAA,OAAnCC,mBAAA,CAAmC;QAA9BV,KAAK,EAAC;MAAS,GAAC,UAAQ,oB;MAJrCW,CAAA;QAMMP,YAAA,CAyBiBI,yBAAA;MA/BvBF,OAAA,EAAAC,QAAA,CAOQ,MAuBS,CAvBTH,YAAA,CAuBSQ,iBAAA;QAvBAC,QAAM,EAPvBC,cAAA,CAOiCC,MAAA,CAAAF,QAAQ;QAAGG,OAAK,EAAED,MAAA,CAAAC,OAAO;QAAEhB,KAAK,EAAC;;QAPlEM,OAAA,EAAAC,QAAA,CAQU,MAME,CANFH,YAAA,CAMEa,kBAAA;UALAC,MAAM,EAAN,EAAM;UATlBC,UAAA,EAUqBJ,MAAA,CAAAK,KAAK;UAV1B,uBAAAX,MAAA,QAAAA,MAAA,MAAAY,MAAA,IAUqBN,MAAA,CAAAK,KAAK,GAAAC,MAAA;UACdC,KAAK,EAAC,kBAAkB;UACxB,YAAU,EAAV,EAAU;UACTC,KAAK,GAAGC,GAAG,IAAIA,GAAG,IAAIA,GAAG,CAACC,MAAM;0DAGnCrB,YAAA,CASEa,kBAAA;UARAC,MAAM,EAAN,EAAM;UACNQ,IAAI,EAAC,UAAU;UAlB3BP,UAAA,EAmBqBJ,MAAA,CAAAY,QAAQ;UAnB7B,uBAAAlB,MAAA,QAAAA,MAAA,MAAAY,MAAA,IAmBqBN,MAAA,CAAAY,QAAQ,GAAAN,MAAA;UACjBC,KAAK,EAAC,uBAAuB;UAC7B,YAAU,EAAV,EAAU;UACTC,KAAK,GAAkBC,GAAG,IAAIA,GAAG,aAAaA,GAAG;0DAIpDd,mBAAA,CAGM,cAFJN,YAAA,CAAwDwB,gBAAA;UAAjDN,KAAK,EAAC,WAAW;UAACI,IAAI,EAAC,QAAQ;UAACG,KAAK,EAAC;YAC7CzB,YAAA,CAAkFwB,gBAAA;UAA3EN,KAAK,EAAC,gBAAgB;UAACI,IAAI,EAAC,OAAO;UAACG,KAAK,EAAC,SAAS;UAACC,IAAI,EAAJ,EAAI;UAAC9B,KAAK,EAAC;;QA5BlFW,CAAA;;MAAAA,CAAA;QAgCMP,YAAA,CAGiBI,yBAAA;MAnCvBF,OAAA,EAAAC,QAAA,CAiCQ,MAA4C,C,0BAA5CG,mBAAA,CAA4C,cAAtC,iCAA+B,sBACrCN,YAAA,CAA0FwB,gBAAA;QAAlFG,OAAK,EAAAtB,MAAA,QAAAA,MAAA,YAAQM,MAAA,CAAAiB,SAAS,CAACC,YAAY;QAAUX,KAAK,EAAC,OAAO;QAACO,KAAK,EAAC;;MAlCjFlB,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}