{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/logo.svg';\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_page = _resolveComponent(\"q-page\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_q_page, {\n    class: \"flex flex-center\"\n  }, {\n    default: _withCtx(() => _cache[0] || (_cache[0] = [_createElementVNode(\"img\", {\n      alt: \"Quasar logo\",\n      src: _imports_0,\n      style: {\n        \"width\": \"200px\",\n        \"height\": \"200px\"\n      }\n    }, null, -1 /* HOISTED */)])),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"span\", null, _toDisplayString($setup.flag), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_createElementBlock","_Fragment","_createVNode","_component_q_page","class","default","_withCtx","_cache","_createElementVNode","alt","src","style","_","_toDisplayString","$setup","flag"],"sources":["/home/alejandro/Escritorio/regcheckTest/frontend/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <q-page class=\"flex flex-center\">\n    <img alt=\"Quasar logo\" src=\"../assets/logo.svg\" style=\"width: 200px; height: 200px\">\n  </q-page>\n  <span>{{ flag }}</span>\n</template>\n\n<style>\n</style>\n\n<script setup>\nimport { useUserStore } from '@/store/userStore';\nimport { storeToRefs } from 'pinia';\n\nconst userStore = useUserStore();\nconst { flag } = storeToRefs(userStore);\n</script>\n"],"mappings":";OAE2BA,UAAwB;;;uBAFnDC,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAESC,iBAAA;IAFDC,KAAK,EAAC;EAAkB;IADlCC,OAAA,EAAAC,QAAA,CAEI,MAAoFC,MAAA,QAAAA,MAAA,OAApFC,mBAAA,CAAoF;MAA/EC,GAAG,EAAC,aAAa;MAACC,GAAwB,EAAxBX,UAAwB;MAACY,KAAmC,EAAnC;QAAA;QAAA;MAAA;;IAFpDC,CAAA;MAIEJ,mBAAA,CAAuB,cAAAK,gBAAA,CAAdC,MAAA,CAAAC,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}