{"ast":null,"code":"import { ref } from 'vue';\nimport { useUserStore } from '@/store/userStore';\n// import { storeToRefs } from 'pinia';\n\nexport default {\n  __name: 'RegisterView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userStore = useUserStore();\n    // const {  } = storeToRefs()\n\n    const email = ref(null);\n    const password = ref(null);\n    async function onSubmit() {\n      try {\n        fetch('http://localhost:3000/api/users/test', {\n          method: 'GET'\n        }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));\n        const response = await userStore.registerUser(email.value, password.value);\n        console.log(response);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    function onReset() {\n      email.value = null;\n      password.value = null;\n    }\n    const __returned__ = {\n      userStore,\n      email,\n      password,\n      onSubmit,\n      onReset,\n      ref,\n      get useUserStore() {\n        return useUserStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useUserStore","userStore","email","password","onSubmit","fetch","method","then","response","json","data","console","log","catch","error","registerUser","value","e","onReset"],"sources":["/app/src/views/RegisterView.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\" style=\"max-width: 400px\">\n    <q-card class=\"my-card\">\n      <q-card-section>\n        <q-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"q-gutter-md\">\n          <q-input\n            filled\n            v-model=\"email\"\n            label=\"Ingresa tu email\"\n            lazy-rules\n            :rules=\"[val => val && val.length > 0 || 'Ingresa un correo válido']\"\n          />\n      \n          <q-input\n            filled\n            type=\"password\"\n            v-model=\"password\"\n            label=\"ingresa tu contraseña\"\n            lazy-rules\n            :rules=\"[\n              val => val !== null && val !== '' || 'Ingresa una contraseña',\n            ]\"\n          />      \n          <div>\n            <q-btn label=\"Submit\" type=\"submit\" color=\"primary\"/>\n            <q-btn label=\"Reset\" type=\"reset\" color=\"primary\" flat class=\"q-ml-sm\" />\n          </div>\n        </q-form>\n      </q-card-section>\n    </q-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useUserStore } from '@/store/userStore'\n// import { storeToRefs } from 'pinia';\n\nconst userStore = useUserStore();\n// const {  } = storeToRefs()\n\nconst email = ref(null)\nconst password = ref(null)\n\nasync function onSubmit() {\n  try {\n    fetch('http://localhost:3000/api/users/test', { method: 'GET' })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch(error => console.error('Error:', error));\n\n    const response = await userStore.registerUser(email.value, password.value)\n    console.log(response);\n  } catch (e) {\n    console.log(e);\n  }\n  \n}\n\nfunction onReset() {\n  email.value = null\n  password.value = null\n}\n</script>\n"],"mappings":"AAkCA,SAASA,GAAG,QAAQ,KAAI;AACxB,SAASC,YAAY,QAAQ,mBAAkB;AAC/C;;;;;;;;IAEA,MAAMC,SAAS,GAAGD,YAAY,CAAC,CAAC;IAChC;;IAEA,MAAME,KAAK,GAAGH,GAAG,CAAC,IAAI;IACtB,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,IAAI;IAEzB,eAAeK,QAAQA,CAAA,EAAG;MACxB,IAAI;QACFC,KAAK,CAAC,sCAAsC,EAAE;UAAEC,MAAM,EAAE;QAAM,CAAC,EAC9DC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,EAC9BG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;QAE/C,MAAMN,QAAQ,GAAG,MAAMP,SAAS,CAACc,YAAY,CAACb,KAAK,CAACc,KAAK,EAAEb,QAAQ,CAACa,KAAK;QACzEL,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOS,CAAC,EAAE;QACVN,OAAO,CAACC,GAAG,CAACK,CAAC,CAAC;MAChB;IAEF;IAEA,SAASC,OAAOA,CAAA,EAAG;MACjBhB,KAAK,CAACc,KAAK,GAAG,IAAG;MACjBb,QAAQ,CAACa,KAAK,GAAG,IAAG;IACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}