{"ast":null,"code":"import { ref } from 'vue';\nimport { useUserStore } from '@/store/userStore';\nimport { toast } from 'vue3-toastify';\n// import { storeToRefs } from 'pinia';\n\nexport default {\n  __name: 'RegisterView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userStore = useUserStore();\n    // const {  } = storeToRefs()\n\n    const email = ref(null);\n    const password = ref(null);\n    async function onSubmit() {\n      try {\n        const res = await userStore.registerUser(email.value, password.value);\n        toast(res.data.message, {\n          autoClose: 3000\n        });\n      } catch (e) {\n        console.log('Estoy en el error aqui', e.response.data.message);\n        toast(e.response.data.message, {\n          autoClose: 3000\n        });\n      }\n    }\n    function onReset() {\n      email.value = null;\n      password.value = null;\n    }\n    const __returned__ = {\n      userStore,\n      email,\n      password,\n      onSubmit,\n      onReset,\n      ref,\n      get useUserStore() {\n        return useUserStore;\n      },\n      get toast() {\n        return toast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useUserStore","toast","userStore","email","password","onSubmit","res","registerUser","value","data","message","autoClose","e","console","log","response","onReset"],"sources":["/app/src/views/RegisterView.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\" style=\"max-width: 400px\">\n    <q-card class=\"my-card\">\n      <q-card-section>\n\n      </q-card-section>\n      <q-card-section>\n        <q-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"q-gutter-md\">\n          <q-input\n            filled\n            v-model=\"email\"\n            label=\"Ingresa tu email\"\n            lazy-rules\n            :rules=\"[val => val && val.length > 0 || 'Ingresa un correo válido']\"\n          />\n      \n          <q-input\n            filled\n            type=\"password\"\n            v-model=\"password\"\n            label=\"ingresa tu contraseña\"\n            lazy-rules\n            :rules=\"[\n              val => val !== null && val !== '' || 'Ingresa una contraseña',\n            ]\"\n          />      \n          <div>\n            <q-btn label=\"Submit\" type=\"submit\" color=\"primary\"/>\n            <q-btn label=\"Reset\" type=\"reset\" color=\"primary\" flat class=\"q-ml-sm\" />\n          </div>\n        </q-form>\n      </q-card-section>\n    </q-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useUserStore } from '@/store/userStore'\nimport { toast } from 'vue3-toastify';\n// import { storeToRefs } from 'pinia';\n\nconst userStore = useUserStore();\n// const {  } = storeToRefs()\n\nconst email = ref(null)\nconst password = ref(null)\n\nasync function onSubmit() {\n  try {\n    const res = await userStore.registerUser(email.value, password.value);\n    toast(res.data.message, {\n      autoClose: 3000,\n    })\n  } catch (e) {\n    console.log('Estoy en el error aqui', e.response.data.message);\n    toast(e.response.data.message, {\n      autoClose: 3000,\n    })\n  }\n  \n}\n\nfunction onReset() {\n  email.value = null\n  password.value = null\n}\n</script>\n"],"mappings":"AAqCA,SAASA,GAAG,QAAQ,KAAI;AACxB,SAASC,YAAY,QAAQ,mBAAkB;AAC/C,SAASC,KAAK,QAAQ,eAAe;AACrC;;;;;;;;IAEA,MAAMC,SAAS,GAAGF,YAAY,CAAC,CAAC;IAChC;;IAEA,MAAMG,KAAK,GAAGJ,GAAG,CAAC,IAAI;IACtB,MAAMK,QAAQ,GAAGL,GAAG,CAAC,IAAI;IAEzB,eAAeM,QAAQA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMJ,SAAS,CAACK,YAAY,CAACJ,KAAK,CAACK,KAAK,EAAEJ,QAAQ,CAACI,KAAK,CAAC;QACrEP,KAAK,CAACK,GAAG,CAACG,IAAI,CAACC,OAAO,EAAE;UACtBC,SAAS,EAAE;QACb,CAAC;MACH,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,CAAC,CAACG,QAAQ,CAACN,IAAI,CAACC,OAAO,CAAC;QAC9DT,KAAK,CAACW,CAAC,CAACG,QAAQ,CAACN,IAAI,CAACC,OAAO,EAAE;UAC7BC,SAAS,EAAE;QACb,CAAC;MACH;IAEF;IAEA,SAASK,OAAOA,CAAA,EAAG;MACjBb,KAAK,CAACK,KAAK,GAAG,IAAG;MACjBJ,QAAQ,CAACI,KAAK,GAAG,IAAG;IACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}